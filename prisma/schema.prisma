// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  role         UserRoles
  password     String
  email        String    @unique
  verifiedUser Boolean
  studentId    String?
  facultyId    String?
  adminId      String?
  students     Student[]
  faculties    Faculty[]
  admin        Admin[]

  @@map("users")
}

model Student {
  id           String              @id @default(uuid())
  studentId    String
  firstName    String
  lastName     String
  middleName   String?
  profileImage String
  gender       String
  institution  String
  user         User                @relation(fields: [userId], references: [id])
  userId       String
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  interests    InterestStudent[]
  faculties    FacultyEnrollment[]

  @@map("students")
}

model Faculty {
  id              String              @id @default(uuid())
  facultyId       String
  firstName       String
  lastName        String
  middleName      String?
  institution     String
  contactNum      String
  profileImage    String
  gender          String
  user            User                @relation(fields: [userId], references: [id])
  userId          String
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  InterestFaculty InterestFaculty[]
  students        FacultyEnrollment[]

  @@map("faculties")
}

model Admin {
  id           String   @id @default(uuid())
  adminId      String
  firstName    String
  lastName     String
  middleName   String
  profileImage String
  gender       String
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("admins")
}

model Token {
  id        String   @id @default(uuid())
  userId    String
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tokens")
}

model Interest {
  id        String            @id @default(uuid())
  title     String            @unique
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  students  InterestStudent[]
  faculties InterestFaculty[]

  @@map("interests")
}

model InterestStudent {
  interestId String
  interest   Interest @relation(fields: [interestId], references: [id])
  studentId  String
  student    Student  @relation(fields: [studentId], references: [id])

  @@id([interestId, studentId])
  @@map("student_interests")
}

model InterestFaculty {
  interestId String
  interest   Interest @relation(fields: [interestId], references: [id])
  facultyId  String
  faculty    Faculty  @relation(fields: [facultyId], references: [id])

  @@id([interestId, facultyId])
  @@map("faculty_interests")
}

enum UserRoles {
  student
  faculty
  admin
}

model FacultyEnrollment {
  id        String  @id @default(uuid())
  student   Student @relation(fields: [studentId], references: [id])
  studentId String
  faculty   Faculty @relation(fields: [facultyId], references: [id])
  facultyId String
}
